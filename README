== Projet : Puzzle ==

== Participants : 4 ==

   Bielle Benjamin 2900825
   Bouilly Romain 2908292  -> interface graphique
   Vigano Sylvain 3203772
   Viljasaar Oskar 3000989

== Fichiers inclus ==

   include/structs.h
	Structures de données du projet
	- (tout le monde)

   src/init.c et include/init.h
	Fonctions de base
	- (tout le monde)

   src/contact.c et include/contact.h 
	Fonctions testant si deux cartes sont compatibles
	- Oskar Viljasaar

   src/chemin.c et include/chemin.h
   	Fonction donnant le chemin de résolution à suivre
	- Benjamin Bielle
	- Vigano Sylvain

   src/backtrack.c et include/backtrack.h
	Fonction de résolution du puzzle
	- Benjamin Bielle

   src/parser.c et include/parser.h
        Fonctions permettant la création et la lecture du fichier de solution 
	- Sylvain Vigano
	- format agréé par tout le monde

   src/main.c
	Main du projet
	- Oskar Viljasaar
	- Benjamin Bielle

== Directives de 'Makefile' ==

   all
	Compilation de tous les fichiers

   DEBUG=1
	Compilation du projet en mode DEBUG (donne notamment l'etat actuel du plateau dans la résolution)
 	
   clean
	Suppression de tous les binaires, de tous les fichiers objet et de la librairie

   proper 
        Suppression de tous les fichiers temporaires
	
   cleanall
	Suppression de tous les binaires, de tous les fichiers objet, de la librairie et des dossiers bin, obj et lib

   run1 
        Lance le programme avec les valeurs par défaut
	
   run2 
        Lance le programme à partir du fichier Puzzle.puzzle en spirale

   run3 
        Lance le programme à partir du fichier Puzzle.puzzle en serpent

   run4
	Lance le programme à partir du fichier Puzzle.puzzle en mode hybride

== Directives de l'exécutable bin/PUZZLE ==
  L'exécutable prend soit deux arguments, soit aucun. Si l'on l'appelle avec deux arguments, le premier doit être
  le fichier du puzzle à résoudre (Puzzle.puzzle est fourni) et un chiffre entre 1 et 3 pour le mode de résolution.
  - 1: parcours en spirale du plateau
  - 2: parcours en S du plateau
  - 3: parcours en hybride (spirale et S) du plateau. Ceci sert pour des plateaux rectangulaires. Le programme prend
  le carré le plus grand possible du rectangle et génère une spirale dessus, puis génère un chemin en S sur le reste
  du rectangle.

  Si l'on appelle l'exécutable sans argument, un puzzle inclus dans le programme est résolu en spirale.

== Etat d'avancement ==

   src/init.c      - OK

   src/contact.c   - OK

   src/chemin.c    - OK

   src/backtrack.c - OK

   src/parser.c    - OK

   src/main.c      - Fini quand les autres fonctions seront finies

== Normes utilisées ==

   Norme Posix (_POSIX_SOURCE 1), ANSI

== Bibliotheques Graphiques == 

   Pygame (bibliotheque basée sur SDL) - Licence : GNU LGPL
